#ifndef REFLECTIONDEFAULTVALUES_H__
#define REFLECTIONDEFAULTVALUES_H__

#include "ge_math.h"
#include "c4d_reflection.h"
#include "mmaterial.h"

namespace cineware
{
#pragma pack (push, 8)

// Global
const Float REFLECTION_LAYER_GLOBAL_REFLECTION_DEFAULT =						1.0;
const Float REFLECTION_LAYER_GLOBAL_SPECULAR_DEFAULT =							1.0;
const Bool REFLECTION_LAYER_GLOBAL_SEPARATE_PASS_DEFAULT =					false;
const Int32 REFLECTION_LAYER_LINEAR_TEXTURES_DEFAULT =							2;

// Main
const Int32 REFLECTION_LAYER_MAIN_DISTRIBUTION_DEFAULT =						REFLECTION_DISTRIBUTION_BECKMANN;
const Int32 REFLECTION_LAYER_MAIN_ADDITIVE_DEFAULT =								REFLECTION_ADDITIVE_MODE_AVG;
const Int32 REFLECTION_LAYER_MAIN_BLEND_MODE_DEFAULT =							MATERIAL_TEXTUREMIXING_NORMAL;
const Bool REFLECTION_LAYER_MAIN_COLORED_REFLECTION_DEFAULT =				false;
const Bool REFLECTION_LAYER_MAIN_COLORED_SPECULAR_DEFAULT =					false;
const Float REFLECTION_LAYER_MAIN_VALUE_ROUGHNESS_DEFAULT =					0.1;
const Float REFLECTION_LAYER_MAIN_VALUE_ROUGHNESS_SPECULAR_DEFAULT = 0.5;
const Float REFLECTION_LAYER_MAIN_VALUE_ROUGHNESS_ANISOTROPY_DEFAULT = 0.5;
const Float REFLECTION_LAYER_MAIN_VALUE_FALLOFF_DEFAULT =						0.0;
const Float REFLECTION_LAYER_MAIN_VALUE_INNER_DEFAULT =							0.0;
const Float REFLECTION_LAYER_MAIN_VALUE_ORENNAYAR_DEFAULT =					0.0;
const Float REFLECTION_LAYER_MAIN_VALUE_REFLECTION_DEFAULT =				1.0;
const Float REFLECTION_LAYER_MAIN_VALUE_SPECULAR_DEFAULT =					0.2;

// Bump
const Float REFLECTION_LAYER_MAIN_VALUE_BUMP_DEFAULT =							1.0;
const Int32 REFLECTION_LAYER_MAIN_VALUE_BUMP_MODE_DEFAULT =					0;
const Int32 REFLECTION_LAYER_MAIN_VALUE_BUMP_SPACE_DEFAULT =				0;
const Float REFLECTION_LAYER_MAIN_VALUE_BUMP_BUMP_DEFAULT =					0.2;
const Float REFLECTION_LAYER_MAIN_VALUE_BUMP_NORM_DEFAULT =					1.0;
const Bool REFLECTION_LAYER_MAIN_VALUE_BUMP_MIPMAP_DEFAULT =				true;
const Bool REFLECTION_LAYER_MAIN_VALUE_BUMP_REVERSEX_DEFAULT =			false;
const Bool REFLECTION_LAYER_MAIN_VALUE_BUMP_REVERSEY_DEFAULT =			false;
const Bool REFLECTION_LAYER_MAIN_VALUE_BUMP_REVERSEZ_DEFAULT =			false;
const Bool REFLECTION_LAYER_MAIN_VALUE_BUMP_SWAP_DEFAULT =					false;

// Color
const Vector REFLECTION_LAYER_COLOR_COLOR_DEFAULT =									Vector(1.0, 1.0, 1.0);
const Float REFLECTION_LAYER_COLOR_BRIGHTNESS_DEFAULT =							1.0;
const Int32 REFLECTION_LAYER_COLOR_MIX_MODE_DEFAULT =								0;
const Float REFLECTION_LAYER_COLOR_MIX_STRENGTH_DEFAULT =						1.0;

// Transparency
const Vector REFLECTION_LAYER_TRANS_COLOR_DEFAULT =									Vector(1.0, 1.0, 1.0);
const Float REFLECTION_LAYER_TRANS_BRIGHTNESS_DEFAULT =							1.0;
const Int32 REFLECTION_LAYER_TRANS_MIX_MODE_DEFAULT =								0;
const Float REFLECTION_LAYER_TRANS_MIX_STRENGTH_DEFAULT =						1.0;

// Anisotropy
const Int32 REFLECTION_LAYER_ANISO_PROJECTION_DEFAULT =							2;
const Float REFLECTION_LAYER_ANISO_PROJECTION_SCALE_DEFAULT =				1.0;
const Float REFLECTION_LAYER_ANISO_PROJECTION_ANGLE_DEFAULT =				0.0;
const Float REFLECTION_LAYER_ANISO_PROJECTION_OFFSET_U_DEFAULT =		0.0;
const Float REFLECTION_LAYER_ANISO_PROJECTION_OFFSET_V_DEFAULT =		0.0;
const Int32 REFLECTION_LAYER_ANISO_PROJECTION_COUNT_DEFAULT =				6;
const Int32 REFLECTION_LAYER_ANISO_PATTERN_DEFAULT =								0;
const Int32 REFLECTION_LAYER_ANISO_MIRROR_DEFAULT =									0;
const Int32 REFLECTION_LAYER_ANISO_SCRATCHES_DEFAULT =							0;
const Float REFLECTION_LAYER_ANISO_VALUE_CUSTOM_DEFAULT =						PI05;
const Float REFLECTION_LAYER_ANISO_VALUE_ANISOTROPY_DEFAULT =				0.25;
const Float REFLECTION_LAYER_ANISO_VALUE_ORIENTATION_DEFAULT =			0.0;
const Float REFLECTION_LAYER_PRIMARY_VALUE_AMPLITUDE_DEFAULT =			1.0;
const Float REFLECTION_LAYER_PRIMARY_VALUE_SCALE_DEFAULT =					1.0;
const Float REFLECTION_LAYER_PRIMARY_VALUE_LENGTH_DEFAULT =					1.0;
const Float REFLECTION_LAYER_PRIMARY_VALUE_ATTENUATION_DEFAULT =		1.0;
const Float REFLECTION_LAYER_SECONDARY_VALUE_AMPLITUDE_DEFAULT =		1.0;
const Float REFLECTION_LAYER_SECONDARY_VALUE_SCALE_DEFAULT =				1.0;
const Float REFLECTION_LAYER_SECONDARY_VALUE_LENGTH_DEFAULT =				1.0;
const Float REFLECTION_LAYER_SECONDARY_VALUE_ATTENUATION_DEFAULT =	1.0;

// Cloth
const Int32 REFLECTION_LAYER_CLOTH_PRESET_DEFAULT =									0;
const Int32 REFLECTION_LAYER_CLOTH_PATTERN_DEFAULT =								0;
const Int32 REFLECTION_LAYER_CLOTH_QUALITY_DEFAULT =								1;
const Float REFLECTION_LAYER_CLOTH_SMOOTHING_DEFAULT =							0.5;
const Float REFLECTION_LAYER_CLOTH_SCATTERING_UNIFORM_DEFAULT =			0.01;
const Float REFLECTION_LAYER_CLOTH_SCATTERING_FORWARD_DEFAULT =			4.0;
const Float REFLECTION_LAYER_CLOTH_VALUE_ORIENTATION_DEFAULT =			0.0;
const Float REFLECTION_LAYER_CLOTH_VALUE_SCALE_U_DEFAULT =					1.0;
const Float REFLECTION_LAYER_CLOTH_VALUE_SCALE_V_DEFAULT =					1.0;
const Float REFLECTION_LAYER_CLOTH_VALUE_HIGHLIGHTS_DEFAULT =				0.5;
const Float REFLECTION_LAYER_CLOTH_NOISE_INTENSITY_DEFAULT =				0.0;
const Float REFLECTION_LAYER_CLOTH_NOISE_SCALE_DEFAULT =						0.3;
const Float REFLECTION_LAYER_CLOTH_NOISE_SHAPE_WARP_DEFAULT =				0.0;
const Float REFLECTION_LAYER_CLOTH_NOISE_SHAPE_WEFT_DEFAULT =				0.0;
const Float REFLECTION_LAYER_CLOTH_NOISE_SHAPE_SCALE_DEFAULT =			0.5;
const Vector REFLECTION_LAYER_CLOTH_COLOR_DIFFUSE_WARP_DEFAULT =		Vector(0.0076877, 0.0096096, 0.014735);
const Vector REFLECTION_LAYER_CLOTH_COLOR_DIFFUSE_WEFT_DEFAULT =		Vector(0.1377400, 0.1313300, 0.163360);
const Vector REFLECTION_LAYER_CLOTH_COLOR_SPECULAR_WARP_DEFAULT =		Vector(0.0207990, 0.0263460, 0.031893);
const Vector REFLECTION_LAYER_CLOTH_COLOR_SPECULAR_WEFT_DEFAULT =		Vector(0.3535900, 0.3535900, 0.353590);

// Fresnel
const Int32 REFLECTION_LAYER_FRESNEL_MODE_DEFAULT =									REFLECTION_FRESNEL_NONE;
const Int32 REFLECTION_LAYER_FRESNEL_PRESET_DEFAULT =								REFLECTION_FRESNEL_DIELECTRIC_CUSTOM;
const Int32 REFLECTION_LAYER_FRESNEL_METAL_DEFAULT =								REFLECTION_FRESNEL_METAL_CUSTOM;
const Bool REFLECTION_LAYER_FRESNEL_INVERTED_DEFAULT =							false;
const Bool REFLECTION_LAYER_FRESNEL_OPAQUE_DEFAULT =								false;
const Float REFLECTION_LAYER_FRESNEL_VALUE_STRENGTH_DEFAULT =				1.0;
const Float REFLECTION_LAYER_FRESNEL_VALUE_IOR_DEFAULT =						1.35;
const Float REFLECTION_LAYER_FRESNEL_VALUE_ETA_DEFAULT =						1.35;
const Float REFLECTION_LAYER_FRESNEL_VALUE_ABSORP_DEFAULT =					2.0;

// Sampling
const Bool REFLECTION_LAYER_SAMPLING_DIM_DEFAULT =									false;
const Float REFLECTION_LAYER_SAMPLING_DIM_DISTANCE_DEFAULT =				100.0;
const Float REFLECTION_LAYER_SAMPLING_DIM_FALLOFF_DEFAULT =					0.0;
const Vector REFLECTION_LAYER_SAMPLING_DIM_COLOR_DEFAULT =					Vector(0.0, 0.0, 0.0);
const Float REFLECTION_LAYER_SAMPLING_CLAMP_DEFAULT =								8.0;
const Float REFLECTION_LAYER_SAMPLING_CUTOFF_DEFAULT =							0.001;
const Vector REFLECTION_LAYER_SAMPLING_EXIT_COLOR_DEFAULT =					Vector(0.0, 0.0, 0.0);
const Bool REFLECTION_LAYER_SAMPLING_SEPARATE_PASS_DEFAULT =				false;
const Float REFLECTION_LAYER_SAMPLING_SAMPLE_COUNT_DEFAULT =				4.0;

#endif // REFLECTIONDEFAULTVALUES_H__

#pragma pack (pop)
}